{"version":3,"file":"static/js/432.8bc794b5.chunk.js","mappings":"mPAoFA,UA3EqB,WACnB,IAEA,GAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAmCC,EAAAA,EAAAA,MAAnC,eAAOC,EAAP,KAAsBC,EAAtB,KAcMC,EAASC,EAAAA,KAAaC,MAAM,CAChCX,KAAMU,EAAAA,KAAaE,WACnBV,MAAOQ,EAAAA,KAAaR,QAAQU,WAC5BR,SAAUM,EAAAA,KAAaE,aAGzB,OACE,UAAC,IAAD,CACEC,UAAU,OACVC,MAAM,UACNC,GAAI,CACFC,MAAO,OACPC,QAAS,kBACTH,MAAO,eACPI,EAAG,GAELC,SAAUV,EACVW,SA7BiB,SAAAC,GACnBA,EAAMC,iBACNf,EAAc,CAAEP,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IACzBI,GACFe,EAAAA,GAAAA,QAAA,6CAEFtB,EAAQ,IACRE,EAAS,IACTE,EAAY,KAWZ,WAYE,SAAC,IAAD,CACEmB,QAAQ,KACRX,UAAU,KACVC,MAAM,UACNC,GAAI,CAAEU,SAAU,GAJlB,SAtCqB,oEA8CrB,SAAC,IAAD,CACEC,GAAG,OACHC,MAAM,kBACNH,QAAQ,WACRT,GAAI,CAAEa,EAAE,GACRC,SAAU,SAAAC,GAAC,OAAI7B,EAAQ6B,EAAEC,OAAOC,WAElC,SAAC,IAAD,CACEN,GAAG,QACHC,MAAM,mBACNH,QAAQ,WACRT,GAAI,CAAEa,EAAE,GACRC,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOC,WAEnC,SAAC,IAAD,CACEN,GAAG,WACHC,MAAM,sBACNH,QAAQ,WACRT,GAAI,CAAEa,EAAE,GACRC,SAAU,SAAAC,GAAC,OAAIzB,EAAYyB,EAAEC,OAAOC,WAEtC,SAAC,IAAD,CAAQR,QAAQ,YAAYS,KAAK,SAASC,KAAK,SAASnB,GAAI,CAAEa,EAAE,GAAhE","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useAddNewUserMutation } from '../redux/user';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\n\nconst RegisterPage = () => {\n  const registrationMessage = `Please, fill out the registration form to use the application.`;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [createNewUser, isSuccess] = useAddNewUserMutation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createNewUser({ name, email, password });\n    if (isSuccess) {\n      toast.success(`The registration procedure was successful`);\n    }\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  //Схема валидации\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      color=\"inherit\"\n      sx={{\n        width: '100%',\n        bgcolor: 'background.main',\n        color: 'text.primary',\n        p: 3,\n      }}\n      validate={schema}\n      onSubmit={handleSubmit}\n    >\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        color=\"inherit\"\n        sx={{ flexGrow: 1 }}\n      >\n        {registrationMessage}\n      </Typography>\n      <TextField\n        id=\"name\"\n        label=\"Enter your name\"\n        variant=\"standard\"\n        sx={{ m:2}}\n        onChange={e => setName(e.target.value)}\n      />\n      <TextField\n        id=\"email\"\n        label=\"Enter your email\"\n        variant=\"standard\"\n        sx={{ m:2}}\n        onChange={e => setEmail(e.target.value)}\n      />\n      <TextField\n        id=\"password\"\n        label=\"Enter your password\"\n        variant=\"standard\"\n        sx={{ m:2}}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Button variant=\"contained\" size=\"medium\" type=\"submit\" sx={{ m:2}}>\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","useAddNewUserMutation","createNewUser","isSuccess","schema","yup","shape","required","component","color","sx","width","bgcolor","p","validate","onSubmit","event","preventDefault","toast","variant","flexGrow","id","label","m","onChange","e","target","value","size","type"],"sourceRoot":""}