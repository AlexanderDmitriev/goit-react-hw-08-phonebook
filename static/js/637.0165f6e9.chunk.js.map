{"version":3,"file":"static/js/637.0165f6e9.chunk.js","mappings":"mPAuEA,UA9DkB,WAChB,IAEA,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAkBC,EAAlB,KAcMC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBT,SAAUM,EAAAA,KAAaG,aAGzB,OACE,iCACE,SAAC,IAAD,CACEC,QAAQ,KACRC,UAAU,KACVC,MAAM,UACNC,GAAI,CAAEC,SAAU,GAJlB,SAzBc,iEAiCd,UAAC,IAAD,CACEH,UAAU,OACVE,GAAI,CACF,kBAAmB,CAAEE,EAAG,EAAGC,MAAO,SAEpCC,SAAUZ,EACVa,SAjCe,SAAAC,GACnBA,EAAMC,iBACNjB,EAAU,CAAEL,MAAAA,EAAOE,SAAAA,IACfI,GACFiB,EAAAA,GAAAA,QAAA,0CAEFtB,EAAS,IACTE,EAAY,IACZkB,EAAMG,cAAcC,SAmBlB,WAQE,SAAC,IAAD,CACEC,GAAG,QACHC,MAAM,mBACNf,QAAQ,WACRgB,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEC,OAAOC,WAEnC,SAAC,IAAD,CACEL,GAAG,WACHC,MAAM,sBACNf,QAAQ,WACRgB,SAAU,SAAAC,GAAC,OAAI1B,EAAY0B,EAAEC,OAAOC,WAEtC,SAAC,IAAD,CAAQnB,QAAQ,YAAYoB,KAAK,SAASC,KAAK,SAA/C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport * as yup from 'yup';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { useLoginUserMutation } from '../redux/user';\nimport toast from 'react-hot-toast';\n\nconst LoginPage = () => {\n  const loginMessage = `Please, enter the login information to use the application.`;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [logInUser, isSuccess] = useLoginUserMutation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    logInUser({ email, password });\n    if (isSuccess) {\n      toast.success(`Welcome to the My Contacts application`);\n    }\n    setEmail('');\n    setPassword('');\n    event.currentTarget.reset();\n  };\n\n  //Схема валидации\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().required(),\n  });\n\n  return (\n    <>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        color=\"inherit\"\n        sx={{ flexGrow: 1 }}\n      >\n        {loginMessage}\n      </Typography>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        validate={schema}\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"email\"\n          label=\"Enter your email\"\n          variant=\"standard\"\n          onChange={e => setEmail(e.target.value)}\n        />\n        <TextField\n          id=\"password\"\n          label=\"Enter your password\"\n          variant=\"standard\"\n          onChange={e => setPassword(e.target.value)}\n        />\n        <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["useState","email","setEmail","password","setPassword","useLoginUserMutation","logInUser","isSuccess","schema","yup","shape","name","required","variant","component","color","sx","flexGrow","m","width","validate","onSubmit","event","preventDefault","toast","currentTarget","reset","id","label","onChange","e","target","value","size","type"],"sourceRoot":""}