{"version":3,"file":"static/js/432.78bfe644.chunk.js","mappings":"gOAsEA,UA/DqB,WACnB,IAEA,GAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAjCC,GAAP,eAWMC,EAASC,EAAAA,KAAaC,MAAM,CAChCV,KAAMS,EAAAA,KAAaE,WACnBT,MAAOO,EAAAA,KAAaP,QAAQS,WAC5BP,SAAUK,EAAAA,KAAaE,aAGzB,OACE,iCACE,wBAxBqB,oEA0BrB,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,SAAUR,EACVS,SAzBe,SAAAC,GACnBA,EAAMC,iBACNZ,EAAc,CAAEP,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAC7BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAcV,WAQE,SAAC,IAAD,CACEe,GAAG,OACHC,MAAM,kBACNC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOvB,EAAQuB,EAAEC,OAAOC,WAEpC,SAAC,IAAD,CACEN,GAAG,QACHC,MAAM,mBACNC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOC,WAErC,SAAC,IAAD,CACEN,GAAG,WACHC,MAAM,sBACNC,QAAQ,WACRC,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOC,WAExC,SAAC,IAAD,CAAQJ,QAAQ,YAAYK,KAAK,SAASC,KAAK,SAA/C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useAddNewUserMutation } from '../redux/user';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport * as yup from 'yup';\n\nconst RegisterPage = () => {\n  const registrationMessage = `Please, fill out the registration form to use the application.`;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [createNewUser /* isSuccess */] = useAddNewUserMutation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createNewUser({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  //Схема валидации\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  });\n\n  return (\n    <>\n      <h2>{registrationMessage}</h2>\n\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        validate={schema}\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"name\"\n          label=\"Enter your name\"\n          variant=\"standard\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          id=\"email\"\n          label=\"Enter your email\"\n          variant=\"standard\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <TextField\n          id=\"password\"\n          label=\"Enter your password\"\n          variant=\"standard\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n\n        \n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","useAddNewUserMutation","createNewUser","schema","yup","shape","required","component","sx","m","width","validate","onSubmit","event","preventDefault","id","label","variant","onChange","e","target","value","size","type"],"sourceRoot":""}