{"version":3,"file":"static/js/432.af9b645d.chunk.js","mappings":"oPAmIA,UA1HqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAGhBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAjCC,GAAP,eAkBMC,EAASC,EAAAA,KAAaC,MAAM,CAChCV,KAAMS,EAAAA,KAAaE,WACnBT,MAAOO,EAAAA,KAAaP,QAAQS,WAC5BP,SAAUK,EAAAA,KAAaE,aAGzB,OACE,iCACE,wBAhCqB,oEAmCrB,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EACVpB,SAjCe,SAAAqB,GACnBA,EAAMC,iBACNrB,EAASU,EAAc,CAAEP,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACtCe,QAAQC,IAAIH,GACZhB,EAAQ,IACRE,EAAS,IACTE,EAAY,KAqBV,WAQE,SAAC,IAAD,CACEgB,GAAG,OACHC,MAAM,kBACNC,QAAQ,WACRC,SAAUvB,KAEZ,SAAC,IAAD,CACEoB,GAAG,QACHC,MAAM,mBACNC,QAAQ,WACRC,SAAUrB,KAEZ,SAAC,IAAD,CACEkB,GAAG,WACHC,MAAM,sBACNC,QAAQ,WACRC,SAAUnB,KAEZ,SAAC,IAAD,CAAQkB,QAAQ,YAAYE,KAAK,SAASC,KAAK,SAA/C,wBAMF,SAAC,KAAD,CACEC,cAAe,CAAE3B,KAAM,GAAIE,MAAO,GAAIE,SAAU,IAChDwB,iBAAkBpB,EAClBZ,SArDgB,SAACiC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UAChCX,QAAQC,IAAIS,GACZjC,EAASiC,GACTC,KA+CE,SAKG,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,OACC,0BACE,UAAC,KAAD,CAAMpC,SAAUmC,EAAhB,WACE,mBAAOE,QAAQ,OAAf,kBAEE,SAAC,KAAD,CACEP,KAAK,OACL1B,KAAK,OACLkC,MAAM,kGAER,SAAC,KAAD,CAAclC,KAAK,OAAOmC,QAAQ,uBAAI,yBAExC,mBAAOF,QAAQ,SAAf,oBAEE,SAAC,KAAD,CACEP,KAAK,QACL1B,KAAK,QACLkC,MAAM,+FACNvB,UAAQ,KAEV,SAAC,KAAD,CACEX,KAAK,QACLmC,OAAQ,SAAAC,GAAG,OAAI,uBAAI,4BAGvB,mBAAOH,QAAQ,WAAf,oBAEE,SAAC,KAAD,CACEP,KAAK,OACL1B,KAAK,WACLkC,MAAM,+FACNvB,UAAQ,KAEV,SAAC,KAAD,CACEX,KAAK,WACLmC,OAAQ,SAAAC,GAAG,OAAI,uBAAI,4BAGvB,mBAAQV,KAAK,SAASW,SAAUL,EAAhC","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useAddNewUserMutation } from '../redux/user';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport * as yup from 'yup';\n\nconst RegisterPage = ({ onSubmit }) => {\n  const registrationMessage = `Please, fill out the registration form to use the application.`;\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [createNewUser /* isSuccess */] = useAddNewUserMutation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(createNewUser({ name, email, password }));\n    console.log(event);\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit2 = (values , { resetForm }) => {\n    console.log(values);\n    onSubmit(values);\n    resetForm();\n  };\n\n  //Схема валидации\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  });\n\n  return (\n    <>\n      <h2>{registrationMessage}</h2>\n\n      {/* Пробую через MUI */}\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"name\"\n          label=\"Enter your name\"\n          variant=\"standard\"\n          onChange={setName}\n        />\n        <TextField\n          id=\"email\"\n          label=\"Enter your email\"\n          variant=\"standard\"\n          onChange={setEmail}\n        />\n        <TextField\n          id=\"password\"\n          label=\"Enter your password\"\n          variant=\"standard\"\n          onChange={setPassword}\n        />\n        <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n\n        {/* Пробую через Formik */}\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit2}\n      >\n        {({ handleSubmit2, isSubmitting }) => (\n          <div>\n            <Form onSubmit={handleSubmit2}>\n              <label htmlFor=\"name\">\n                Name\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer\"\n                />\n                <ErrorMessage name=\"name\" render={<p>{'Incorrect name'}</p>} />\n              </label>\n              <label htmlFor=\"number\">\n                Number\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  render={msg => <p>{'Incorrect number'}</p>}\n                />\n              </label>\n              <label htmlFor=\"password\">\n                Number\n                <Field\n                  type=\"text\"\n                  name=\"password\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  render={msg => <p>{'Incorrect number'}</p>}\n                />\n              </label>\n              <button type=\"submit\" disabled={isSubmitting}>\n                Add contact\n              </button>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["onSubmit","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","useAddNewUserMutation","createNewUser","schema","yup","shape","required","component","sx","m","width","noValidate","event","preventDefault","console","log","id","label","variant","onChange","size","type","initialValues","validationSchema","values","resetForm","handleSubmit2","isSubmitting","htmlFor","title","render","msg","disabled"],"sourceRoot":""}